>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [
...     [1, 2, 3],
...     [4, int('5'), 6]
... ]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix
[[1, 2, 3], [4, 5, 6]]
>>> matrix = [
...     [1, 2],
...     [0.12345, -5],
...     [-2.5, 0]
... ]
>>> matrix_divided(matrix, 2)
[[0.5, 1.0], [0.06, -2.5], [-1.25, 0.0]]
>>> matrix_divided(5, 2)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[1, 5], [10, "15"]], 2)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[1, 2], [3, 4, 5]], 2)
Traceback (most recent call last):
  ...
TypeError: Each row of the matrix must have the same size
>>> matrix_divided([[1, int('2')], [3, 4]], "Two")
Traceback (most recent call last):
  ...
TypeError: div must be a number
>>> matrix_divided([[1, 2], [3, 4]], 0)
Traceback (most recent call last):
  ...
ZeroDivisionError: division by zero
>>> matrix = [
...     [-1, 2.5],
...     [3.333, -4.5]
... ]
>>> matrix_divided(matrix, 1.5)
[[-0.67, 1.67], [2.22, -3.0]]
>>> matrix = [
...     [10000000000, 20000000000],
...     [30000000000, 40000000000]
... ]
>>> matrix_divided(matrix, 10000000000)
[[1.0, 2.0], [3.0, 4.0]]
>>> matrix_divided([[42]], 7)
[[6.0]]

